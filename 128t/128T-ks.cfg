#version=DEVEL
# System authorization information
auth --enableshadow --passalgo=sha512

# Use text install
text
reboot
firstboot --disable

# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8

install
cdrom

# Configure Customer Specific Users 
%include {{ISO_INSTALL_SNIPPETS}}/setup_users_ks.cfg

# System Timezone (--isUtc assumes HW clock uses UTC)
timezone UTC --isUtc

# setup partitions plus install bootloader
%include {{ISO_INSTALL_SNIPPETS}}/setup_partitions_ks.cfg

# Disable SELinux
selinux --disabled

###############################################################################
###############################################################################
##
##  WARNING: Do not make manual edits to the packages section; they will be 
##           discarded by the ISO generation tool when the ISO is created!!! 
##           (edits made before this comment will be carried over to the 
##           ISO kickstart file
##
###############################################################################
###############################################################################
%packages
%end
###############################################################################
##  END of generated section -- edits after this comment will be added to the 
##  ISO kickstart file
###############################################################################

%addon com_redhat_kdump --disable --reserve-mb='128'

%end

%post --nochroot --log=/mnt/sysimage/root/ks-post.log

INSTALLER_FILES=/mnt/install/repo
INSTALLED_ROOT=/mnt/sysimage

# Comment out default NTP servers
sed -i '/^server/s/^/#/' /mnt/sysimage/etc/ntp.conf
# Add new NTP servers
echo -en '\n\nserver 0.pool.ntp.org\nserver 1.pool.ntp.org\nserver 2.pool.ntp.org\nserver 3.pool.ntp.org\n' >> /mnt/sysimage/etc/ntp.conf
# Enable NTPD
chroot /mnt/sysimage systemctl disable chronyd
chroot /mnt/sysimage systemctl enable ntpd

INSTALL_SCRIPT_SRC=$INSTALLER_FILES/downloads/install128t 
INSTALL_SCRIPT_DST=$INSTALLED_ROOT/usr/bin/install128t
YUM_CERT_DIR=$INSTALLED_ROOT/etc/pki/128technology
PACKAGE_DIR=$INSTALLED_ROOT/etc/128technology
CHROOT_REPO_DIR=/etc/128technology/Packages
REPO_FILE=$INSTALLED_ROOT/etc/yum.repos.d/install128t.repo
CHROOT_RPM_KEY_DIR=/etc/pki/rpm-gpg
RPM_KEY_DIR=$INSTALLED_ROOT$CHROOT_RPM_KEY_DIR

# Copy install128t from ISO mount to /usr/bin/install128t
if [ -f $INSTALL_SCRIPT_SRC ] ; then
    cp -f $INSTALL_SCRIPT_SRC $INSTALL_SCRIPT_DST
    chmod +x $INSTALL_SCRIPT_DST

    # process saltstack public key
    mkdir -p $RPM_KEY_DIR
    cp -f $INSTALLER_FILES/downloads/SALTSTACK-GPG-KEY.pub $RPM_KEY_DIR/SALTSTACK-GPG-KEY.pub
    chroot $INSTALLED_ROOT bash -c "rpm --import $CHROOT_RPM_KEY_DIR/SALTSTACK-GPG-KEY.pub"

    # Fool the installer into thinking it has a yum certificate
    mkdir -p $YUM_CERT_DIR
    touch $YUM_CERT_DIR/release.pem

    # Copy ISO packages to local yum repo directory
    mkdir -p $PACKAGE_DIR
    echo "Start Copying Package Files..."
    echo "$INSTALLER_FILES/Packages -> $PACKAGE_DIR"
    rsync -avzh --progress $INSTALLER_FILES/Packages $PACKAGE_DIR
    echo "Finished Copying Package Files..."

    # create a local repo .repo config file
    echo "Create $REPO_FILE"
    echo "[install128t]" >  $REPO_FILE
    echo "name=128T Standalone Repo" >> $REPO_FILE
    echo "failovermethod=priority" >> $REPO_FILE
    echo "sslverify=0" >> $REPO_FILE
    echo "baseurl=file://$CHROOT_REPO_DIR/" >> $REPO_FILE
    echo "enabled=1" >> $REPO_FILE
    echo "metadata_expire=1h" >> $REPO_FILE
    echo "gpgcheck=0" >> $REPO_FILE
    echo "skip_if_unavailable=False" >> $REPO_FILE

    echo "Create Local YUM Repository"
    chroot $INSTALLED_ROOT bash -c "/usr/bin/createrepo $CHROOT_REPO_DIR"
fi

# Journal entries should persist accross reboots
echo "Persist Journal entries accross reboots..."
JOURNAL_CONF_DIR=/usr/lib/systemd/journald.conf.d
JOURNAL_CONF_FILE=$JOURNAL_CONF_DIR'/10-journald-defaults.conf'
chroot $INSTALLED_ROOT bash -c "mkdir -p $JOURNAL_CONF_DIR && \
echo -e \\\\"# Persist journal store across system reboots\\\\n[Journal]\\\\nStorage=persistent\\\\" >> $JOURNAL_CONF_FILE"
if [ $? -ne 0 ] ; then
     "Persist Journal entries FAILED!!!..."
fi 

# configure coredumps in the installed context
echo "Enable core dumps..."
chroot $INSTALLED_ROOT bash -c "echo 'kernel.core_pattern=|/usr/lib/systemd/systemd-coredump %p %u %g %s %t %e' > /usr/lib/sysctl.d/50-coredump.conf"

# setup login banner
echo "Setup Login Banner"
cp $INSTALLER_FILES/motd.txt $INSTALLED_ROOT/root/motd.txt
chroot $INSTALLED_ROOT mv -f /root/motd.txt /etc/motd

%end

